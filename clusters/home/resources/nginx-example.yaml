apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
  namespace: default
spec:
  selector:
    matchLabels:
      run: my-nginx
  replicas: 2
  template:
    metadata:
      labels:
        run: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: my-nginx
  namespace: default
  labels:
    run: my-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    run: my-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-ingress-example
  namespace: default
spec:
  ingressClassName: cloudflare-tunnel
  rules:
  - host: nginx.nakatanakatana.dev
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: my-nginx
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-ingress-example-private
  namespace: default
spec:
  ingressClassName: cloudflare-tunnel
  rules:
  - host: private-nginx.nakatanakatana.dev
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: my-nginx
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tailscale-ingress-example
  namespace: default
spec:
  defaultBackend:
    service:
      name: my-nginx
      port:
        number: 80
  ingressClassName: tailscale
  tls:
    - hosts:
        - my-nginx
